#include <bits/stdc++.h>
#define endl '\n'
#define LL long long
#define LD long double
#define pb push_back
#define sz(a) (int)a.size()
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define debug(x) cerr << #x << " is " << x << endl;
using namespace std;
int const MAXN = 2e8 + 9;
LL M = 1LL << 40;
LL s0 = 1611516670;
int block = 1e6;
LL before [] = {0,502984,995306,1498258,1998844,2500401,3001393,3500190,3999082,4500820,5004364,5512698,6011436,6511002,7012601,7500029,8002855,8499689,9000464,9504061,10006017,10504170,11005541,11505757,12003251,12506329,13006130,13506761,14003714,14508694,15011683,15514848,16015235,16516067,17013805,17517443,18017774,18516743,19017244,19515097,20012408,20513726,21014794,21521369,22028493,22530434,23031470,23537551,24032363,24530609,25031296,25533395,26034534,26540391,27038505,27539195,28039980,28541830,29040198,29539710,30040232,30539973,31037671,31539441,32037696,32538480,33040920,33543018,34042894,34544672,35042602,35544908,36038770,36539206,37041078,37541450,38036709,38537906,39039571,39539377,40042828,40547257,41043465,41545884,42047578,42546233,43049621,43551063,44052909,44554559,45056959,45554672,46052912,46552064,47050518,47548216,48046434,48544071,49048470,49549754,
50056831,50557376,51058008,51557273,52058653,52565704,53064233,53564851,54060933,54556692,55056278,55556726,56054527,56555312,57060178,57559660,58061102,58560779,59060167,59564033,60057168,60559019,61060773,61558121,62056275,62554179,63053854,63560321,64057793,64560045,65062411,65562338,66066909,66572917,67074121,67574933,68077204,68576836,69074813,69578219,70077204,70572325,71072154,71571244,72070164,72572034,73073858,73576657,74076618,74575254,75074286,75578103,76080479,76581009,77082752,77586589,78083423,78588163,79089032,79587502,80089334,80589335,81086972,81585288,82082869,82577797,83075877,83574667,84074594,84578690,85076566,85577765,86077885,86575098,87071797,87569837,88066475,88565277,89061258,89557867,90060817,90559357,91057197,91554797,92059329,92557144,93053611,93558722,94066087,94568344,95067617,95568007,96069983,96578839,97082646,97582000,98083970,98584271,99089614,99588123,
100089173,100587587,101080653,101581033,102077740,102578453,103084620,103581261,104078916,104578791,105080524,105576391,106075637,106578726,107076332,107578420,108087162,108592028,109088096,109590435,110081437,110584146,111084446,111582688,112082235,112579315,113075875,113580176,114079359,114578150,115071718,115569496,116070241,116572062,117077203,117584728,118087024,118588258,119089313,119593213,120091493,120589824,121090065,121591532,122096449,122603663,123105791,123604624,124099108,124603005,125100277,125599822,126098295,126601495,127097435,127598938,128098749,128598478,129099927,129606265,130104566,130608500,131101704,131599111,132104529,132606644,133105067,133613967,134112909,134614468,135114812,135611589,136107892,136605753,137105533,137604957,138104641,138612280,139114170,139611189,140110603,140616828,141115404,141616541,142117990,142613775,143106656,143615170,144114855,144614440,145118771,145613726,146116601,146615821,147114827,147616701,148117857,148619782,149119782,149619012,
150119937,150621712,151122090,151619911,152113038,152614526,153117304,153617158,154118720,154618656,155117508,155615238,156115832,156613957,157108725,157608613,158110685,158607152,159109836,159609212,160106698,160604579,161105359,161609777,162107537,162605678,163105696,163606181,164109508,164610471,165108248,165606553,166105383,166604291,167104867,167605345,168104812,168604079,169099355,169602580,170101751,170601744,171099771,171601946,172099893,172599641,173092341,173589384,174086057,174584382,175085228};
LL after [] = {0,175642125,176138809,176636419,177135992,177636103,178135729,178636349,179138880,179638261,180137205,180631002,181133396,181634675,182133519,182627935,183126084,183626154,184126410,184625254,185131265,185631714,186132238,186634510,187135995,187631413,188128538,188632147,189133854,189634247,190132672,190635979,191138808,191638860,192138387,192635104,193133654,193632854,194131284,194634531,195136183,195634819,196136365,196641682,197134266,197633887,198133638,198634116,199131993,199630799,200128142,200628606,201125882,201632921,202134860,202634273,203133742,203621308,204118627,204618197,205119036,205618954,206122354,206624008,207124647,207626627,208125366,208625434,209121449,209621968,210119361,210617163,211119318,211620776,212119080,212621029,213111945,213612672,214112553,214611734,215110742,215613729,216117543,216616636,217115996,217621161,218124382,218619956,219118827,219619349,220115079,220615596,221117083,221618792,222116344,222614816,223116915,223618217,224116411,224617050,225121142,
225618710,226123716,226626298,227127521,227626293,228128137,228626494,229124605,229613557,230112674,230614483,231115684,231621920,232126248,232628396,233129413,233631790,234130822,234629865,235133716,235633377,236130959,236639706,237140084,237636435,238135156,238638377,239141783,239636468,240137613,240643576,241146867,241642843,242139814,242641870,243142706,243637461,244137454,244636674,245136646,245640761,246140495,246640173,247139691,247640337,248140827,248631797,249133277,249630842,250128038,250630445,251126767,251625816,252127218,252630133,253130382,253633672,254129929,254630245,255125316,255621360,256124199,256622728,257126650,257625862,258126662,258626557,259128079,259629239,260127783,260627269,261127056,261625268,262125078,262620547,263116629,263615728,264113703,264613718,265112949,265611682,266112828};
LL f(LL last){
    return (last + (last >> 20) + 12345LL) & (M - 1);
}
void find_cycle(){
    //Floyd's tortoise and hare algorithm
    LL tortoise = f(s0);
    LL hare = f(f(s0));
    int periode = 1;
    while(hare != tortoise){
        tortoise = f(tortoise);
        hare = f(f(hare));
    }
    int i = 0;
    tortoise = s0;
    while(tortoise != hare){
        i++;
        tortoise = f(tortoise);
		hare = f(hare);
    }
    tortoise = f(hare);
    while(tortoise != hare){
        tortoise = f(tortoise);
        periode++;
    }
    int start = i;
    cout << periode  << " " << start << endl;
}
void gen (int n,int start){
    LL x = s0;
    LL ans  = 0;
    vector<LL> v;
    for(int i = 0; i < n; i++){
        ans += !(x & 1);
        x = f(x);
        if((i - start)% block == 0 && i > start){
            v.pb(ans);
        }
    }
    cout << sz(v) << endl;
    int i = 0;
    for(auto cur : v){
        cout << cur <<',';
        i++;
        if(i % 100 == 0) cout << endl;
    }
        
}
int main(){
   // ios_base::sync_with_stdio (0),cin.tie(0);
    LL start = 350125310;
    LL all_start = 175147925;
    LL periode = 182129209;
    LL all_periode = 266177229 - all_start;
    gen(periode+start,start);
    LL n;
    cin >> n;
    if(n == 0) return cout << 0;
    n--;
    if(n == start) return cout << all_start ;
    if(n < start){
        LL nbr = n / block;
        LL ans = before[nbr];
        for(int i = nbr*block; i <= )
    }

   }